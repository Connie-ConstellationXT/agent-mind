<!-- Concise Omelette Recipe - Demonstrating Core Intent Scaffolding Patterns -->
<IntentDOM root="MakeOmelette">

<!-- DISRUPT Handlers: Emergency preparedness outside normal workflow -->
  <D:Precept name="HandleBurnInjury" 
             description="Immediate response to cooking burns with comprehensive first aid">
    <Provides>
      <Capability name="emergency_response" domain="kitchen_safety" />
      <Capability name="burn_treatment" domain="cooking_incidents" />
    </Provides>
    
    <PreflightValidation>
      <R:Precept name="ValidateEmergencyKit" 
                 providing="capability:emergency_validation AND domain:kitchen"
                 description="Comprehensive emergency kit validation with branching logic" />
      <RequiredInstrument instrumentName="emergency_kit" />
    </PreflightValidation>
    <RequiredInstrument instrumentName="ice_pack" preflight="true" location="freezer" />
    <RequiredInstrument instrumentName="clean_towel" preflight="true" />
    
    <Action>Remove hand from heat source immediately</Action>
    <Action>Apply ice pack to burned area for 10-15 minutes</Action>
    <Action>Apply burn gel if available and burn is severe</Action>
    <Action>Cover with clean towel if blistering occurs</Action>
    
    <Output>
      <Artifact name="burn_treated">
        <Type>medical_intervention</Type>
        <Description>Burn injury treated and stabilized</Description>
      </Artifact>
    </Output>
  </D:Precept>

  <D:Precept name="HandleKitchenFire" 
             description="Kitchen fire emergency response with validated equipment">
    <Provides>
      <Capability name="fire_suppression" domain="kitchen" />
      <Capability name="emergency_response" domain="cooking_incidents" />
    </Provides>
    
    <PreflightValidation>
      <R:Precept name="ValidateFireSafety" 
                 providing="capability:fire_safety_validation AND domain:kitchen"
                 description="Validate fire extinguisher and blanket readiness" />
      <RequiredInstrument instrumentName="emergency_kit" />
    </PreflightValidation>
    
    <Action>Turn off heat source immediately</Action>
    <Action>Smother small grease fires with fire blanket</Action>
    <Action>Use fire extinguisher for larger fires</Action>
    <Action>Evacuate if fire cannot be controlled</Action>
    
    <Output>
      <Artifact name="fire_suppressed">
        <Type>emergency_intervention</Type>
        <Description>Kitchen fire contained or area evacuated</Description>
      </Artifact>
    </Output>
  </D:Precept>

  <!-- Normal cooking workflow begins here -->
  <Precept name="MakeOmelette">
    <Description>Prepare and cook a basic cheese omelette</Description>
        <Provides>
      <Capability name="omelette_homemade" domain="food_preparation" />
    </Provides>
    <Domains>
      <Domain ref="kitchen" />
      <Domain ref="food_preparation" />
      <Domain ref="food_safety" />
    </Domains>

    <RequiredInstrument instrumentName="eggs" quantity="2-3" alias="chosen_eggs"/>
    <RequiredInstrument instrumentName="cheese" type="grated" quantity="50g" alias="chosen_cheese"/>
    <RequiredInstrument instrumentName="butter" quantity="1tbsp" alias="chosen_butter"/>
    <RequiredInstrument instrumentName="salt_pepper" alias="chosen_seasonings"/>
    <RequiredInstrument instrumentName="non_stick_pan" alias="chosen_pan"/>
    <RequiredInstrument instrumentName="spatula" alias="chosen_spatula"/>
    
    <Constraint type="temperature">Medium heat throughout cooking</Constraint>
    
    <!-- Preflight: Basic validation -->
    <StagingPhase type="preflight" name="validate_ingredients">
      <PreflightValidation>
        <R:Precept name="TestEggFreshness" providing="domain:food_safety AND capability:egg_validation" instrument="chosen_eggs"/>
        <R:Precept name="TestButterFreshness" providing="domain:food_safety AND capability:butter_validation" instrument="chosen_butter"/>
        <R:Precept name="TestCheeseCondition" providing="domain:food_safety AND capability:cheese_validation" instrument="chosen_cheese"/>
        <R:Precept name="ValidateSeasonings" providing="domain:food_safety AND capability:seasoning_validation" instrument="chosen_seasonings"/>
        <R:Precept name="VerifyPanCondition" providing="domain:kitchen AND capability:pan_validation" instrument="chosen_pan"/>
        <R:Precept name="CheckSpatulaCondition" providing="domain:kitchen AND capability:utensil_validation" instrument="chosen_spatula"/>
      </PreflightValidation>
      <Output>
        <Artifact name="ingredients_validated">
          <Type>validation_data</Type>
          <Description>All ingredients validated for cooking</Description>
        </Artifact>
      </Output>
    </StagingPhase>
    <!-- Equipment and ingredient preparation phase -->
    <StagingPhase type="execution" name="preparation">
      <Description>Prepare equipment and ingredients concurrently</Description>
      
      <!-- Equipment preparation with yield-safe waiting -->
      <Precept name="HeatPan">
        <Provides>
          <Capability name="pan_heating" domain="kitchen_equipment" />
          <Capability name="temperature_control" domain="cooking" />
        </Provides>
        
        <Action>Place pan on stove and set to medium heat</Action>
        
        <!-- Yield-safe checkpoint: pan is heating, safe to context switch -->
        <YieldSafePoint name="heating_checkpoint">
          <StateVector>
            <State key="pan_on_stove" value="true" />
            <State key="heat_setting" value="medium" />
            <State key="start_time" value="timestamp" />
          </StateVector>
          <WaitCondition duration="1m" reason="Pan heating" />
          <ResumeCondition>
            <Check state="pan_temperature" target="ready" />
          </ResumeCondition>
        </YieldSafePoint>
        
        <Action>Add butter and swirl to coat</Action>
        <Action>Wait for butter sizzling</Action>
        
        <!-- Emergency interrupt handler for loud sizzling -->
        <D:Precept name="HandleLoudSizzling" 
                   providing="capability:emergency_response"
                   entry_point="heating_checkpoint">
          <Provides>
            <Capability name="emergency_response" domain="cooking_incidents" />
            <Capability name="heat_emergency_control" domain="kitchen_safety" />
          </Provides>
          
          <Description>Emergency response to unexpected loud sizzling - something's burning!</Description>
          <Trigger signal="loud_sizzling" />
          
          <Action>Immediately reduce heat to low</Action>
          <Action>Remove pan from heat if smoking</Action>
          <Action>Check for burning - adjust heat accordingly</Action>
          <Action>Resume heating at appropriate temperature</Action>
          
          <Output>
            <Artifact name="sizzling_controlled">
              <Type>emergency_intervention</Type>
              <Description>Loud sizzling emergency handled</Description>
            </Artifact>
          </Output>
        </D:Precept>
        
        <!-- Idle-time task declaration -->
        <Vigil name="CheckPanOccasionally" 
               frequency="every_30s" 
               during="heating_checkpoint">
          <Description>Optional periodic check you can do when idle</Description>
          <Action>Glance at pan to ensure even heating</Action>
          <Action>Listen for appropriate sizzling sounds</Action>
          <Condition>Only if not busy with other tasks</Condition>
        </Vigil>
        <Output>
          <Artifact name="pan_ready">
            <Type>state_vector</Type>
            <Description>Pan heated and buttered</Description>
          </Artifact>
        </Output>
      </Precept>
      
      <!-- Ingredient preparation -->
      <Precept name="CrackEggs">
        <Provides>
          <Capability name="egg_preparation" domain="food_preparation" />
        </Provides>
        
        <Action>Crack eggs into bowl</Action>
        <Output>
          <Artifact name="cracked_eggs">
            <Type>instrument</Type>
            <Description>Raw eggs cracked into bowl</Description>
          </Artifact>
        </Output>
      </Precept>
      
      <!-- Universal seasoning - reusable across all recipes -->
      <R:Precept name="SeasonFood" 
                 providing="capability:seasoning_application AND domain:food_preparation"
                 food_item="cracked_eggs" 
                 seasonings="chosen_seasonings" 
                 quantity="to_taste"
                 description="Add salt and pepper to cracked eggs, seasoning to taste" />
      
      <Precept name="WhiskEggs">
        <Provides>
          <Capability name="egg_mixing" domain="food_preparation" />
        </Provides>
        
        <RequiredInstrument instrumentName="seasoned_eggs" />
        <Action>Whisk until well combined</Action>
        <Output>
          <Artifact name="whisked_eggs">
            <Type>instrument</Type>
            <Description>Eggs ready for cooking</Description>
          </Artifact>
        </Output>
      </Precept>
      
      <Precept name="PrepCheese">
        <Provides>
          <Capability name="cheese_preparation" domain="food_preparation" />
        </Provides>
        
        <Action>Ensure cheese is grated and ready</Action>
        <Output>
          <Artifact name="grated_cheese">
            <Type>instrument</Type>
            <Description>Cheese prepared for omelette</Description>
          </Artifact>
        </Output>
      </Precept>
      
      <Output>
        <Artifact name="preparation_complete">
          <Type>state_vector</Type>
          <Description>Equipment heated and ingredients prepared</Description>
        </Artifact>
      </Output>
    </StagingPhase>

    <!-- Cooking execution phase -->
    <StagingPhase type="execution" name="cooking">
      <Description>Cook the omelette using prepared ingredients and equipment</Description>
      <RequiredInstrument instrumentName="preparation_complete" />
      
      <Precept name="CookBase">
        <Provides>
          <Capability name="omelette_base_cooking" domain="cooking" />
          <Capability name="heat_management" domain="kitchen_skills" />
        </Provides>
        
        <RequiredInstrument instrumentName="pan_ready" />
        <RequiredInstrument instrumentName="whisked_eggs" />
        
        <Action>Pour eggs into pan smoothly</Action>
        <Action>Let set while gently stirring</Action>
        
        <!-- Yield-safe waiting during egg setting -->
        <YieldSafePoint name="eggs_setting">
          <StateVector>
            <State key="eggs_in_pan" value="true" />
            <State key="base_cooking" value="true" />
            <State key="start_time" value="timestamp" />
          </StateVector>
          <WaitCondition duration="45s" reason="Base setting" />
        </YieldSafePoint>
        
        <!-- Emergency response to burning -->
        <D:Precept name="HandleBurningEggs">
          <Provides>
            <Capability name="emergency_response" domain="cooking_incidents" />
            <Capability name="burn_prevention" domain="food_safety" />
            <Capability name="stove_aberrant_heat_control" domain="food_preparation" />
          </Provides>
          
          <Trigger signal="burning_smell" />
          <Action>Immediately reduce heat</Action>
          <Action>Lift pan briefly to cool</Action>
          <Action>Resume cooking at lower temperature</Action>
        </D:Precept>
        
        <!-- Idle task for occasional stirring -->
        <Vigil name="GentlyStirOccasionally" 
               frequency="every_15s" 
               during="eggs_setting">
          <Description>Optional gentle stirring when you have attention available</Description>
          <Action>Gently push edges toward center</Action>
          <Condition>Only if not distracted by other tasks</Condition>
        </Vigil>
        
        <Output>
          <Artifact name="base_set">
            <Type>state_vector</Type>
            <Description>Omelette base cooked and ready for cheese</Description>
          </Artifact>
        </Output>
      </Precept>
      
      <Precept name="FinishOmelette">
        <Provides>
          <Capability name="omelette_finishing" domain="cooking" />
          <Capability name="food_plating" domain="food_presentation" />
        </Provides>
        
        <RequiredInstrument instrumentName="base_set"/>
        <RequiredInstrument instrumentName="grated_cheese"/>
        
        <Action>Sprinkle cheese over half</Action>
        <Action>Fold omelette in half</Action>
        <Action>Slide onto plate</Action>
        <Action>Turn off heat</Action>
        
        <Output>
          <Artifact name="finished_omelette">
            <Type>food_item</Type>
            <Description>Completed omelette ready to serve</Description>
          </Artifact>
          <Artifact name="cooking_complete">
            <Type>state_vector</Type>
            <Description>Omelette cooking completed successfully</Description>
        </Artifact>

        </Output>
      </Precept>  
    </StagingPhase>
        
  </Precept>
</IntentDOM>